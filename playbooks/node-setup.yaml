---
- hosts: all
  gather_facts: yes

  tasks:
    - name: Get the MAC address
      debug: msg="{{ hostvars[inventory_hostname]['ansible_ens224']['macaddress'] }}"
    - name: Disable SWAP as it needs to be disbled for Kubernetes
      shell: |
        swapoff -a
    - name: Disable SWAP on boot.
      replace:
        path: /etc/fstab
        regexp: '^(.*?\sswap\s+.*)$'
        replace: '# \1'
    - name: Install YUM Utils
      yum:
        name: yum-utils
        state: latest
    - name: Install EPEL
      yum:
        name:
          - epel-release
        state: latest
    - name: Install Python PIP/Wheel
      yum:
        name:
          - python-wheel
          - python-pip
        state: latest
    - name: Disable SELinux
      selinux:
        state: disabled
    - name: Stop firewalld
      systemd:
        name: firewalld
        state: stopped
        enabled: no
    - name: Enable IP forwarding
      shell: |
        echo "net.bridge.bridge-nf-call-ip6tables=1" >> /etc/sysctl.conf
        echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
        echo "net.bridge.bridge-nf-call-iptables=1" >> /etc/sysctl.conf
    - name: Create uplink interface
      copy:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{etherdev}}"
        content: |
          DEVICE={{etherdev}}
          HWADDR=
          IPV6INIT=no
          NAME={{etherdev}}
          ONBOOT=yes
          MTU=9000
    - name: Create OpFlex sub-interface for ACI Infra
      copy:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{etherdev}}.{{aci_infra_vlan}}"
        content: |
          PERSISTENT_DHCLIENT=1
          DHCPRELEASE=1
          DEVICE={{etherdev}}.{{aci_infra_vlan}}
          ONBOOT=yes
          PEERDNS=yes
          NM_CONTROLLED=no
          HWADDR="{{ hostvars[inventory_hostname]['ansible_ens224']['macaddress'] }}"
          TYPE=Ethernet
          BOOTPROTO=dhcp
          VLAN=yes
          ONPARENT=yes
          MTU=1600
    - name: Add Multicast routes via the ACI Infra sub-interface
      copy:
        dest: "/etc/sysconfig/network-scripts/route-{{etherdev}}.{{aci_infra_vlan}}"
        content: |
          ADDRESS0=224.0.0.0
          NETMASK0=240.0.0.0
          INTERFACE={{etherdev}}.{{aci_infra_vlan}}
          METRIC0=0
    - name: Add Sub-interface DHCP options
      copy:
        dest: "/etc/dhcp/dhclient-{{etherdev}}.{{aci_infra_vlan}}.conf"
        content: |
          send dhcp-client-identifier 01:{{ hostvars[inventory_hostname]['ansible_ens224']['macaddress'] }};
          request subnet-mask, domain-name, domain-name-servers, host-name;
          send host-name {{ hostvars[inventory_hostname]['ansible_hostname'] }};

          option rfc3442-classless-static-routes code 121 = array of unsigned integer 8;
          option ms-classless-static-routes code 249 = array of unsigned integer 8;
          option wpad code 252 = string;

          also request rfc3442-classless-static-routes;
          also request ms-classless-static-routes;
          also request static-routes;
          also request wpad;
          also request ntp-servers;
    - name: Create sub-interface for Kubernetes Node Infra/API inter-node traffic
      copy:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{etherdev}}.{{node_net_vlan}}"
        content: |
          DEVICE={{etherdev}}.{{node_net_vlan}}
          IPADDR={{node_net_ip}}
          PREFIX={{node_net_prefix}}
          ONBOOT=yes
          PEERDNS=yes
          NM_CONTROLLED=no
          VLAN=yes
          ONPARENT=yes
          MTU=9000
    - name: Add static route for Kubernetes Node Infra/API inter-node traffic
      copy:
        dest: "/etc/sysconfig/network-scripts/route-{{etherdev}}.{{node_net_vlan}}"
        content: |
          ADDRESS0={{route_address}}
          NETMASK0={{route_netmask}}
          GATEWAY0={{route_gateway}}
    - name: Add Docker-CE repository
      shell: |
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - name: Add Kubernetes Repositories
      yum_repository:
        name: kubernetes
        description: Kubernetes package repository
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgcheck: yes
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    - name: Update repository caches
      command:
        cmd: yum -y makecache fast
        warn: false
    - name: Create docker configuration directory in etc
      file:
        path: /etc/docker
        state: directory
        owner: root
        group: root
        mode: 0775
    - name: Create docker configuration file
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
                "max-size": "100m"
              },
            "storage-driver": "overlay2",
            "storage-opts": [
              "overlay2.override_kernel_check=true"
            ]
          }
    - name: Install Docker-CE with specific version
      yum:
        name: "{{docker_ce_version}}"
        update_cache: yes
        state: present
        allow_downgrade: yes
    - name: Install Docker-CE-CLI with specific version
      yum:
        name: "{{docker_ce_cli_version}}"
        update_cache: yes
        state: present
        allow_downgrade: yes
    - name: Install containerd with specific version
      yum:
        name: "{{containerd_io_version}}"
        update_cache: yes
        state: present
        allow_downgrade: yes
    - name: Start/Enable docker-ce
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: Install Kubernetes CNI
      yum:
        name: "{{k8s_cni_version}}"
        state: present
        update_cache: no
        allow_downgrade: yes
    - name: Install Kubernetes CTL
      yum:
        name: "{{k8s_ctl_version}}"
        state: present
        update_cache: no
        allow_downgrade: yes
    - name: Install Kubernetes KubeLet
      yum:
        name: "{{k8s_let_version}}"
        state: present
        update_cache: no
        allow_downgrade: yes
    - name: Install Kubernetes Admin
      yum:
        name: "{{k8s_adm_version}}"
        state: present
        update_cache: no
        allow_downgrade: yes
    - name: Start/Enable Kubernetes KubeLet
      systemd:
        name: kubelet
        state: started
        enabled: yes
